{# purpose of this template: maps display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'TdMMapsModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ map|tdmmapsmodule_formattedTitle|default(__('Map')) }}{% endblock %}
{% block title %}
    {% set templateTitle = map|tdmmapsmodule_formattedTitle|default(__('Map')) %}
    {{ templateTitle|notifyFilters('tdmmapsmodule.filter_hooks.maps.filter')|safeHtml }}{% if routeArea == 'admin' %} <small>({{ map.workflowState|tdmmapsmodule_objectState(false)|lower }})</small>{% endif %}
    {% set itemActions = knp_menu_get('TdMMapsModule:ItemActionsMenu:menu', [], {entity: map, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ map.getKey() }}DropDownToggleStart" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:bootstrap_fontawesome.html.twig'}) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="tdmmapsmodule-map tdmmapsmodule-display">

    <dl>
        {% if map.workflowState is not empty and routeArea == 'admin' %}
            <dt>{{ __('State') }}</dt>
            <dd>{{ map.workflowState|tdmmapsmodule_listEntry('map', 'workflowState') }}</dd>
        {% endif %}
        {% if map.name is not empty %}
            <dt>{{ __('Name') }}</dt>
            <dd>{{ map.name }}</dd>
        {% endif %}
        {% if map.author is not empty %}
            <dt>{{ __('Author') }}</dt>
            <dd>{{ map.author }}</dd>
        {% endif %}
        {% if map.mapFile is not empty %}
            <dt>{{ __('Map file') }}</dt>
            <dd>{% if map.mapFileMeta|default %}
            <a href="{{ map.mapFileUrl }}" title="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}"{% if map.mapFileMeta.isImage %} class="image-link"{% endif %}>
            {% if map.mapFileMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'mapMapFile') %}
                <img src="{{ map.mapFile.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ map.mapFileMeta.size|tdmmapsmodule_fileSize(map.mapFile.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% endif %}
            </dd>
        {% endif %}
        {% if map.testState is not empty %}
            <dt>{{ __('Test state') }}</dt>
            <dd>{{ map.testState|tdmmapsmodule_listEntry('map', 'testState') }}</dd>
        {% endif %}
        {% if map.game is not empty %}
            <dt>{{ __('Game') }}</dt>
            <dd>{{ map.game|tdmmapsmodule_listEntry('map', 'game') }}</dd>
        {% endif %}
        {% if map.sizeMap is not empty %}
            <dt>{{ __('Size map') }}</dt>
            <dd>{{ map.sizeMap|tdmmapsmodule_listEntry('map', 'sizeMap') }}</dd>
        {% endif %}
        {% if map.bUnderground is not empty %}
            <dt>{{ __('B underground') }}</dt>
            <dd>{% if map.bUnderground %}
                <i class="fa fa-check" title="{{ __('Yes') }}"></i>
            {% else %}
                <i class="fa fa-times" title="{{ __('No') }}"></i>
            {% endif %}
            </dd>
        {% endif %}
        {% if map.languageMap is not empty %}
            <dt>{{ __('Language map') }}</dt>
            <dd>{{ map.languageMap|tdmmapsmodule_listEntry('map', 'languageMap') }}</dd>
        {% endif %}
        {% if map.createDat is not empty %}
            <dt>{{ __('Create dat') }}</dt>
            <dd>{{ map.createDat|localizeddate('medium', 'none') }}</dd>
        {% endif %}
        {% if map.versionMap is not empty %}
            <dt>{{ __('Version map') }}</dt>
            <dd>{{ map.versionMap }}</dd>
        {% endif %}
        {% if map.difficulty is not empty %}
            <dt>{{ __('Difficulty') }}</dt>
            <dd>{{ map.difficulty|tdmmapsmodule_listEntry('map', 'difficulty') }}</dd>
        {% endif %}
        {% if map.nHumans is not empty %}
            <dt>{{ __('N humans') }}</dt>
            <dd>{{ map.nHumans }}</dd>
        {% endif %}
        {% if map.nPlayers is not empty %}
            <dt>{{ __('N players') }}</dt>
            <dd>{{ map.nPlayers }}</dd>
        {% endif %}
        {% if map.gameType is not empty %}
            <dt>{{ __('Game type') }}</dt>
            <dd>{{ map.gameType|tdmmapsmodule_listEntry('map', 'gameType') }}</dd>
        {% endif %}
        {% if map.mapStyle is not empty %}
            <dt>{{ __('Map style') }}</dt>
            <dd>{{ map.mapStyle|tdmmapsmodule_listEntry('map', 'mapStyle') }}</dd>
        {% endif %}
        {% if map.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ map.description|safeHtml }}</dd>
        {% endif %}
        {% if map.foreground is not empty %}
            <dt>{{ __('Foreground') }}</dt>
            <dd>{% if map.foreground is not empty and map.foregroundMeta|default %}
                        <a href="{{ map.foregroundUrl }}" title="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}"{% if map.foregroundMeta.isImage %} class="image-link"{% endif %}>
            {% if map.foregroundMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'mapForeground') %}
                <img src="{{ map.foreground.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ map.foregroundMeta.size|tdmmapsmodule_fileSize(map.foreground.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if map.underground is not empty %}
            <dt>{{ __('Underground') }}</dt>
            <dd>{% if map.underground is not empty and map.undergroundMeta|default %}
                        <a href="{{ map.undergroundUrl }}" title="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}"{% if map.undergroundMeta.isImage %} class="image-link"{% endif %}>
            {% if map.undergroundMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'mapUnderground') %}
                <img src="{{ map.underground.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ map|tdmmapsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ map.undergroundMeta.size|tdmmapsmodule_fileSize(map.underground.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if map.scoreRev is not empty %}
            <dt>{{ __('Score rev') }}</dt>
            <dd>{{ map.scoreRev }}</dd>
        {% endif %}
        {% if map.nScoreRev is not empty %}
            <dt>{{ __('N score rev') }}</dt>
            <dd>{{ map.nScoreRev }}</dd>
        {% endif %}
        {% if map.nDownloads is not empty %}
            <dt>{{ __('N downloads') }}</dt>
            <dd>{{ map.nDownloads }}</dd>
        {% endif %}
        
    </dl>

    {{ include('@TdMMapsModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: map}) }}

    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='tdmmapsmodule.ui_hooks.maps.display_view', id=map.getKey(), urlObject=currentUrlObject, outputAsArray=true) %}
    {% if hooks is iterable and hooks|length > 0 %}
        {% for area, hook in hooks %}
            <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
        {% endfor %}
    {% endif %}
{% endblock %}
