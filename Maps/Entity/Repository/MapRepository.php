<?php
/**
 * Maps.
 *
 * @copyright Krator (TdM)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Krator <torredemarfil@heroesofmightandmagic.es>.
 * @link https://www.heroesofmightandmagic.es
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.1.0 (https://modulestudio.de).
 */

namespace TdM\MapsModule\Entity\Repository;

use TdM\MapsModule\Entity\Repository\Base\AbstractMapRepository;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for map entities.
 */
class MapRepository extends AbstractMapRepository
{
    // feel free to add your own methods here, like for example reusable DQL queries
	public function getTopTen()
    {
		//$dql = "SELECT a.id, a.name, (a.scoreRev / a.nScoreRev) AS puntuacion FROM Maps_Entity_Maps a WHERE a.mapState = 'Comprobado' ORDER BY puntuacion DESC";
		$selection = "tbl.id, tbl.name, (tbl.scoreRev / tbl.nScoreRev) AS puntuacion";
		$where = "tbl.workflowState = 'approved'";
		$orderBy = "puntuacion DESC";
		$qb = $this->getEntityManager()->createQueryBuilder();
		$qb->select($selection)
           ->from($this->mainEntityClass, 'tbl');
		$qb->andWhere($where);
		$qb->add('orderBy', $orderBy);
		// generate query
        $query = $this->_em->createQuery($qb);
		$query->setMaxResults('10');

		try {
            $result = $query->getResult();
        } catch (Exception $e) {
            echo "<pre>";
            var_dump($e->getMessage());
            var_dump($query->getDQL());
            var_dump($query->getParameters());
            var_dump($query->getSQL());
            die;
        }
        return $result;
	}
}
